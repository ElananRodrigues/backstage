apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: criar-repo-nginx
  title: Criar novo Repositório com Estrutura do serviço
  description: Um template para criar um novo repositório chamado boilerplate-nginx e publicar no GitHub
spec:
  owner: hype/devops
  type: devops

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Definir o nome do serviço
      required:
        - name
        - clusterName
        - environment
      properties:
        name:
          title: Nome
          type: string
          description: Definir o nome do serviço
          ui:autofocus: true
          ui:options:
            rows: 5
        clusterName:
          title: Nome do Cluster
          type: string
          description: Selecionar cluster
          default: cluster-product
          enum:
            - cluster-product
            - cluster-devops
          enumNames:
            - 'cluster-product'
            - 'cluster-devops'
        environment:
          title: Ambiente do Serviço
          type: string
          description: Ambiente onde o serviço será criado
          default: staging
          enum:
            - staging
            - production
          enumNames:
            - 'staging'
            - 'production'
    - title: Definir o repositório de origem
      required:
        - repoUrl
      properties:
        repoUrl:
          title: "owner: Hype-Empreendimentos | repo: Mesmo nome do serviço"
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
        branch:
          title: Branch
          type: string
          description: Branch do repositório
          default: develop

  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./gitrepo
        copyWithoutRender:
          - .github/workflows/*
        values:
          name: ${{ parameters.name }}
          cluster: ${{ parameters.clusterName }}
          environment: ${{ parameters.environment }}
          url_env: ${{ '' if parameters.environment == 'production' else '-stg' }}
          owner: ${{ parameters.repoUrl.split("=").join(" ").split("?").join("").split("&").join(" ").split(" ")[1] }}

    # This step publishes the contents of the working directory to GitHub.
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: ${{ parameters.branch }}



    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/ecs/catalog-info.yaml'
    
  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}